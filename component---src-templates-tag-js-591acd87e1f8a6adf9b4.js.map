{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./src/templates/tag.js"],"names":["_assertThisInitialized","self","ReferenceError","Tag","props","horizontal","direction","directionTo","directionFrom","half","length","TimelineMax","set","cover","y","x","display","to","ease","Power1","easeInOut","vertical","mod","opacity","easeIn","moveInDirection","bind","React","createRef","char","node","staggerFrom","querySelectorAll","Back","easeOut","render","data","this","tag","pageContext","edges","allMarkdownRemark","siteTitle","site","siteMetadata","title","location","ref","n","className","map","frontmatter","date","slug","fields","key","exit","trigger","entry","delay","bg","style","position","background","top","left","width","height","transform","Component"],"mappings":"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","file":"component---src-templates-tag-js-591acd87e1f8a6adf9b4.js","sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","// https://www.gatsbyjs.org/docs/adding-tags-and-categories-to-blog-posts/#add-tags-to-your-markdown-files\nimport React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { TimelineMax, Back, Power1 } from \"gsap\"\nimport TransitionLink, { TransitionPortal } from \"gatsby-plugin-transition-link\"\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass Tag extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.horizontal = this.horizontal.bind(this)\n    this.vertical = this.vertical.bind(this)\n\n    this.cover = React.createRef()\n    this.mod = React.createRef()\n  }\n\n  horizontal = ({ length: seconds }, direction) => {\n    const directionTo = direction === \"left\" ? \"-100%\" : \"100%\"\n    const directionFrom = direction === \"left\" ? \"100%\" : \"-100%\"\n\n    // convert ms to s for gsap\n    // const seconds = length\n    const half = seconds / 2\n\n    return new TimelineMax()\n      .set(this.cover, { y: 0, x: directionFrom, display: \"block\" })\n      .to(this.cover, half, {\n        x: \"0%\",\n        ease: Power1.easeInOut,\n      })\n      .to(this.cover, half, {\n        x: directionTo,\n        ease: Power1.easeInOut,\n      })\n  }\n\n  vertical = ({ length: seconds }, direction) => {\n    const directionTo = direction === \"up\" ? \"-100%\" : \"100%\"\n    const directionFrom = direction === \"up\" ? \"100%\" : \"-100%\"\n\n    const half = seconds / 2\n\n    return new TimelineMax()\n      .set(this.cover, { y: directionFrom })\n      .to(this.cover, half, {\n        y: \"0%\",\n        ease: Power1.easeInOut,\n      })\n      .set(this.mod, { opacity: 0 })\n      .to(this.cover, half, {\n        y: directionTo,\n        ease: Power1.easeIn,\n      })\n  }\n\n  moveInDirection = (props, direction) => {\n    if (direction === \"left\" || direction === \"right\")\n      return this.horizontal(props, direction)\n\n    return this.vertical(props, direction)\n  }\n\n  char(node) {\n    return new TimelineMax().staggerFrom(\n      node.querySelectorAll(\".char\"),\n      0.5,\n      { ease: Back.easeOut, opacity: 0, y: \"+=50\" },\n      0.05\n    )\n  }\n\n  render() {\n    const { data } = this.props\n    const { tag } = this.props.pageContext\n    const { edges } = data.allMarkdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={tag} />\n        <div ref={n => (this.mod = n)}>\n          <h2>#{tag}</h2>\n          <ul className=\"blog-list\">\n            {edges.map(({ node }) => {\n              const { title, date } = node.frontmatter\n              const { slug } = node.fields\n              return (\n                <li key={slug}>\n                  <h3>\n                    <TransitionLink\n                      to={`/${slug}`}\n                      exit={{\n                        length: 1,\n                        trigger: ({ exit }) =>\n                          this.moveInDirection(exit, \"left\"),\n                        // state: { char: \"exit state\" },\n                      }}\n                      entry={{\n                        delay: 0.5,\n                        trigger: ({ node }) => this.char(node),\n                      }}\n                    >\n                      {title}\n                    </TransitionLink>\n                  </h3>\n                  <small>{date}</small>\n                </li>\n              )\n            })}\n          </ul>\n          <AniLink cover direction=\"down\" bg=\"#8c61ff\" to=\"/tags\">\n            All tags\n          </AniLink>\n        </div>\n        <TransitionPortal>\n          <div\n            ref={n => (this.cover = n)}\n            style={{\n              position: \"fixed\",\n              background: \"#8c61ff\",\n              top: 0,\n              left: 0,\n              width: \"100vw\",\n              height: \"100vh\",\n              transform: \"translateY(100%)\",\n            }}\n          />\n        </TransitionPortal>\n      </Layout>\n    )\n  }\n}\n\nexport default Tag\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}