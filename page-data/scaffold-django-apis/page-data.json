{"componentChunkName":"component---src-templates-post-js","path":"/scaffold-django-apis","result":{"data":{"site":{"siteMetadata":{"title":"abdenasser.com","author":"Abdenasser Elidrissi"}},"markdownRemark":{"id":"de58ea9a-e817-5685-92df-608429e42367","excerpt":"scaffold django api application with command line Hey ðŸ‘‹ my name is Abdenasser Iâ€™ll give you a proper introduction to who Iâ€™m in the next blog, but today Iâ€™llâ€¦","html":"<p><img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b8sj9xtznnwd1doijr6f.png\" alt=\"scaffold django api application with command line\"></p>\n<p>Hey ðŸ‘‹ my name is Abdenasser Iâ€™ll give you a proper introduction to who Iâ€™m in the next blog, but today Iâ€™ll show you how to use this little django scaffold library I crafted last week <a href=\"https://github.com/Abdenasser/dr_scaffold\">https://github.com/Abdenasser/dr_scaffold</a> to create a ready to use and fully functional REST apis with django only using the command line, letâ€™s get started.</p>\n<p>Setting a django environment is outside of the scope of this article, Iâ€™m sure thereâ€™s a lot of guides and tutorials on how to do that all over internet you can follow one of them and get back, Iâ€™ll be waiting for you just right here!</p>\n<p>In a nutshell here is what we gonna do in three steps:</p>\n<ol>\n<li>Create a django project</li>\n<li>Setup django rest framework and dr_scaffold</li>\n<li>Scaffold a blog api with Articles and Authors</li>\n</ol>\n<h1>1. Create a django project:</h1>\n<p>Letâ€™s create a django project using this django-admin command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ django-admin startproject myApi</code></pre></div>\n<p>this command does the same as <code class=\"language-text\">python manage.py startproject myApi</code> the only difference is that it doesnâ€™t require a python environment to get executed.</p>\n<p>Letâ€™s then cd to our newly created django project <code class=\"language-text\">cd myApi</code> and create a virtualenv with:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ python3 -m virtualenv <span class=\"token function\">env</span></code></pre></div>\n<p>Finally letâ€™s activate our virtual env with:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">source</span> env/bin/activate</code></pre></div>\n<h1>2. Setup django rest framework and dr_scaffold:</h1>\n<p>Letâ€™s install django rest framework and dr_scaffold packages using pip like the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ pip <span class=\"token function\">install</span> djangorestframework\n$ pip <span class=\"token function\">install</span> dr-scaffold</code></pre></div>\n<p>Next letâ€™s add these packages to our project <code class=\"language-text\">INSTALLED_APPS</code> inside <code class=\"language-text\">myApi/settings.py</code> like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">INSTALLED_APPS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'rest_framework'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'dr_scaffold'</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<h1>3. Scaffold a blog api with Articles and Authors</h1>\n<p>Our blog api will be composed of two main resources an Article and a Author, Letâ€™s scaffold our Author first:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ python manage.py dr_scaffold blog Author name:charfield\nðŸŽ‰ Your RESTful Author api resource is ready ðŸŽ‰</code></pre></div>\n<p>this command will generate a blog folder with <code class=\"language-text\">models.py</code> > <code class=\"language-text\">admin.py</code> <code class=\"language-text\">views.py</code> <code class=\"language-text\">serializers.py</code> <code class=\"language-text\">urls.py</code> all populated with appropriate code that your REST api needs for Author resource</p>\n<p>Lets also generate the Article resource:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ python manage.py dr_scaffold blog Post body:textfield author:foreignkey:Author\nðŸŽ‰ Your RESTful Post api resource is ready ðŸŽ‰</code></pre></div>\n<p>this command will do the same thing but also will add a relation to our Author resource through a <code class=\"language-text\">foreignkey</code> field.</p>\n<p>In order to generate the database tables letâ€™s add blog to our <code class=\"language-text\">INSTALLED_APPS</code> inside <code class=\"language-text\">myApi/settings.py</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">INSTALLED_APPS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'rest_framework'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'dr_scaffold'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'blog'</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>Then letâ€™s run these commands to generate our migrations and migrate the database:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ python manage.py makemigrations\n$ python manage.py migrate</code></pre></div>\n<p>Finally add our blog to our projectâ€™s <code class=\"language-text\">urlpatterns</code> inside <code class=\"language-text\">myApi/urls.py</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">urlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">\"blog/\"</span><span class=\"token punctuation\">,</span> include<span class=\"token punctuation\">(</span><span class=\"token string\">\"blog.urls\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>Donâ€™t forget to import include in your projectâ€™s <code class=\"language-text\">urls.py</code> like so :</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> include</code></pre></div>\n<p>Your <code class=\"language-text\">urls.py</code> should look something like this in the end:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> include <span class=\"token comment\">#our added import</span>\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib <span class=\"token keyword\">import</span> admin\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> path\n\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">'admin/'</span><span class=\"token punctuation\">,</span> admin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>urls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">\"blog/\"</span><span class=\"token punctuation\">,</span> include<span class=\"token punctuation\">(</span><span class=\"token string\">\"blog.urls\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">#our added bol path</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>Now that we are completely done letâ€™s run <code class=\"language-text\">python manage.py runserver</code> and head over to <code class=\"language-text\">http://127.0.0.1:8000/blog/</code> to see your fully created REST blog API.. and also you can generate a super user with <code class=\"language-text\">python manage.py createsuperuser</code> then head over to <code class=\"language-text\">http://127.0.0.1:8000/admin</code> to check the admin panel.</p>\n<p>Donâ€™t forget to star the <a href=\"https://github.com/Abdenasser/dr_scaffold\">repo</a> on github If you like it.. Enjoy ðŸŽ‰ !</p>","frontmatter":{"title":"Scaffold django apis like a champion","date":"August 26, 2021","spoiler":"The very first blog post","tags":["django","python","oss"]}}},"pageContext":{"slug":"scaffold-django-apis"}},"staticQueryHashes":["2589769190","3074981077"]}